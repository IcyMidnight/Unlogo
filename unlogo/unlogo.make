# GNU Make project makefile autogenerated by Premake
ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

ifndef CC
  CC = gcc
endif

ifndef CXX
  CXX = g++
endif

ifndef AR
  AR = ar
endif

ifeq ($(config),debug)
  OBJDIR     = obj/Debug
  TARGETDIR  = .
  TARGET     = $(TARGETDIR)/libunlogo.a
  DEFINES   += -DDEBUG
  INCLUDES  += -I../src/Effects -I../src/Images -I../src/Tools -I../src/Utils -I../3rdParty/demo_ASIFT_src -I../3rdParty/jsoncpp-src-0.5.0/include -I/opt/local/include -I/usr/local/include -I/usr/include
  CPPFLAGS  += -MMD -MP $(DEFINES) $(INCLUDES)
  CFLAGS    += $(CPPFLAGS) $(ARCH) -g
  CXXFLAGS  += $(CFLAGS) 
  LDFLAGS   += -L/opt/local/lib -L/usr/local/lib
  LIBS      += -lopencv_core -lopencv_highgui -lopencv_imgproc -lopencv_objdetect
  RESFLAGS  += $(DEFINES) $(INCLUDES) 
  LDDEPS    += 
  LINKCMD    = $(AR) -rcs $(TARGET) $(OBJECTS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),release)
  OBJDIR     = obj/Release
  TARGETDIR  = .
  TARGET     = $(TARGETDIR)/libunlogo.a
  DEFINES   += -DNDEBUG
  INCLUDES  += -I../src/Effects -I../src/Images -I../src/Tools -I../src/Utils -I../3rdParty/demo_ASIFT_src -I../3rdParty/jsoncpp-src-0.5.0/include -I/opt/local/include -I/usr/local/include -I/usr/include
  CPPFLAGS  += -MMD -MP $(DEFINES) $(INCLUDES)
  CFLAGS    += $(CPPFLAGS) $(ARCH) -O2
  CXXFLAGS  += $(CFLAGS) 
  LDFLAGS   += -Wl,-x -L/opt/local/lib -L/usr/local/lib
  LIBS      += -lopencv_core -lopencv_highgui -lopencv_imgproc -lopencv_objdetect
  RESFLAGS  += $(DEFINES) $(INCLUDES) 
  LDDEPS    += 
  LINKCMD    = $(AR) -rcs $(TARGET) $(OBJECTS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

OBJECTS := \
	$(OBJDIR)/main.o \
	$(OBJDIR)/unlogo.o \
	$(OBJDIR)/compute_asift_keypoints.o \
	$(OBJDIR)/compute_asift_matches.o \
	$(OBJDIR)/demo_lib_sift.o \
	$(OBJDIR)/domain.o \
	$(OBJDIR)/filter.o \
	$(OBJDIR)/flimage.o \
	$(OBJDIR)/fproj.o \
	$(OBJDIR)/frot.o \
	$(OBJDIR)/library.o \
	$(OBJDIR)/numerics1.o \
	$(OBJDIR)/orsa.o \
	$(OBJDIR)/splines.o \
	$(OBJDIR)/json_reader.o \
	$(OBJDIR)/json_value.o \
	$(OBJDIR)/json_writer.o \

RESOURCES := \

SHELLTYPE := msdos
ifeq (,$(ComSpec)$(COMSPEC))
  SHELLTYPE := posix
endif
ifeq (/bin,$(findstring /bin,$(SHELL)))
  SHELLTYPE := posix
endif

.PHONY: clean prebuild prelink

all: $(TARGETDIR) $(OBJDIR) prebuild prelink $(TARGET)
	@:

$(TARGET): $(GCH) $(OBJECTS) $(LDDEPS) $(RESOURCES)
	@echo Linking unlogo
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning unlogo
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild:
	$(PREBUILDCMDS)

prelink:
	$(PRELINKCMDS)

ifneq (,$(PCH))
$(GCH): $(PCH)
	@echo $(notdir $<)
	-$(SILENT) cp $< $(OBJDIR)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
endif

$(OBJDIR)/main.o: src/main.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/unlogo.o: src/unlogo.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/compute_asift_keypoints.o: ../3rdParty/demo_ASIFT_src/compute_asift_keypoints.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/compute_asift_matches.o: ../3rdParty/demo_ASIFT_src/compute_asift_matches.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/demo_lib_sift.o: ../3rdParty/demo_ASIFT_src/demo_lib_sift.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/domain.o: ../3rdParty/demo_ASIFT_src/domain.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/filter.o: ../3rdParty/demo_ASIFT_src/filter.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/flimage.o: ../3rdParty/demo_ASIFT_src/flimage.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/fproj.o: ../3rdParty/demo_ASIFT_src/fproj.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/frot.o: ../3rdParty/demo_ASIFT_src/frot.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/library.o: ../3rdParty/demo_ASIFT_src/library.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/numerics1.o: ../3rdParty/demo_ASIFT_src/numerics1.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/orsa.o: ../3rdParty/demo_ASIFT_src/orsa.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/splines.o: ../3rdParty/demo_ASIFT_src/splines.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/json_reader.o: ../3rdParty/jsoncpp-src-0.5.0/src/lib_json/json_reader.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/json_value.o: ../3rdParty/jsoncpp-src-0.5.0/src/lib_json/json_value.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/json_writer.o: ../3rdParty/jsoncpp-src-0.5.0/src/lib_json/json_writer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"

-include $(OBJECTS:%.o=%.d)
