UNLOGO
By Jeff Crouse and Kashif Bilal
jefftimesten at gmail dot com
with support from Minnesota Art on Wheels and Eyebeam

This software is licensed under the GNU-GPL version 3 or later.

Unlogo is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public
License as published by the Free Software Foundation; either
version 3 of the License, or (at your option) any later version.

Unlogo is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
General Public License for more details.

REQUIREMENTS
===============

- OpenCV: http://opencv.willowgarage.com/wiki/
- libANN:  http://www.cs.umd.edu/~mount/ANN/
	direct link: http://www.cs.umd.edu/~mount/ANN/Files/1.1.2/ann_1.1.2.zip
- libsiftfast: http://sourceforge.net/projects/libsift 
	direct: http://downloads.sourceforge.net/project/libsift/libsiftfast/libsiftfast-1.2/libsiftfast-1.2-src.tgz
- pkg-config

Note:
- When compiling libANN for OSX, it might complain 'libtool: unrecognized option `-static`'.  This is because of a Macports/Fink issue.  Just open the Makefile and change this:

	"MAKELIB = libtool -static -o " \
to this
	"MAKELIB = /usr/bin/libtool -static -o " \

- Even with this fix, you will get an error in 'rand.cpp'.  Ignore this and move the lib and include files into your system.

- On OSX, use 'cmake -DUSE_OPENMP=OFF .' to configure libsiftfast.  

INSTRUCTIONS
================

The Unlogo filter uses the 'plugin' AVFilter for FFMPEG written by Kashif Balil.  This greatly simplifies and speeds up the process of making an AVFilter by allowing the user to reference a shared object when running FFMPEG rather than building the functionality into FFMPEG and having to recompile all of FFMPEG with every change. So the first thing you need to do is compile a version of FFMPEG with the 'plugin' filter.   

Note:  Libavfilter is only available in the 0.6 branch. Older version of FFMPEG will not work. 

- Run checkout.sh

- Configure and build FFMPEG as you normally would. Google is full of tutorials of how to build FFMPEG on your particular platform.  This works for me:

	./configure --arch=x86 --enable-libmp3lame --enable-libx264 --enable-nonfree --enable-gpl --disable-doc --prefix=../

	make
	
	make install

- Now make logo.so by running 'make'.  Make sure you've already installed the requirements listed above

- You're done!  To use the filter, make sure to reference the version of FFMPEG that you just built, and then do something like this: 

	ffmpeg -qscale 2 -i [input video] -vf plugin=logo.so:[logo image] -y [output file name]

	ffmpeg -qscale 2 -i share/videos/IMG_0092.MOV -vf plugin=./logo.so:./share/logos/Dior.jpg -y out.mov




